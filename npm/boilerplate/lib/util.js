/**
 * Replaces postman variables in request snippet with language specific declaration
 *
 * @param {String} requestSnippet - Request snipept generated by postman-code-generator
 * @returns {String} - Request snippet string with replaced collection variables
 */
function replaceVariables (requestSnippet) {
  var variableDeclarations = requestSnippet.match(/{{.*}}/g);
  if (variableDeclarations) {
    variableDeclarations.forEach((element) => {
      // replacing {{variable_name}} as required. Refer existing codegen for usage
    });
  }
  return requestSnippet;
}

/**
 * Generates snippet for a function declaration
 *
 * @note refet other sdkgens for usage
 * @param {String} requestSnippet - Request snippet generated by postman-code-generator
 * @param {Object} options - postman-code-gen options (for specific language)
 * @returns {String} - returns a snippet of function declaration of of a request
 */
function generateFunctionSnippet (requestSnippet, options) {
  var snippet = '';
  // generate function snippet/declaration here. Refer other codegens for reference
  return snippet;
}

/**
 * A handler function used to generate snippet for a pm.Item
 * --- Passed as a parameter to processCollection function. Check other SDK gen for reference ---
 * @param {sdk.Item} collectionItem - Postman Collection Item instance
 * @param {object} options - postman-code-generator options
 * @returns {string} - string contaning snippet for input item
 */
function itemHandler (collectionItem, options) {
  let snippet = '';
  // generate itemHandler string here. Refer other sdkgen for reference
  return snippet;
}

/**
 * Handler function userd to generate snippet for a pm.ItemGroup
 * --- Passed as a parameter to processCollection function. Check other SDK gen for reference ---
 * @note refet other sdkgens for usage
 * @param {sdk.ItemGroup} collectionItem - Postman Collection Item Member
 * @param groupSnippet
 * @param {array } memberResults - Array of result after passing through processCollection method for this ItemGroup
 * @returns {string} - snippet for input ItemGroup
 */
function itemGroupHandler (collectionItem, groupSnippet) {
  let snippet = '';
  // generate ItemGroup snippet here. Refer other sdkgens for reference
  return snippet;
}

module.exports = {
  itemHandler,
  itemGroupHandler
};
